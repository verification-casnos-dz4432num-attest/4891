<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vérification Client - Debug</title>

    <!-- Firebase -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>

    <!-- CryptoJS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            text-align: center;
            padding: 50px;
        }
        h1 {
            color: #333;
        }
        #result {
            margin-top: 20px;
            font-size: 1.2em;
            color: green;
        }
        pre {
            text-align: left;
            background: #eee;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
        }
    </style>
</head>

<body>
    <h1>Vérification de l'attestation (Mode Debug)</h1>
    <div id="result">Chargement...</div>
    <pre id="debug"></pre>

    <script>
        const firebaseConfig = {
            apiKey: "AIzaSy...", // Remplace par ta vraie clé API
            authDomain: "verif-clients-f5915.firebaseapp.com",
            databaseURL: "https://verif-clients-f5915-default-rtdb.firebaseio.com/",
            projectId: "verif-clients-f5915",
            storageBucket: "verif-clients-f5915.appspot.com",
            messagingSenderId: "...",
            appId: "..."
        };

        firebase.initializeApp(firebaseConfig);
        const db = firebase.database();

        const debug = (msg) => {
            document.getElementById('debug').innerHTML += msg + "\n";
            console.log(msg);
        };

        const urlParams = new URLSearchParams(window.location.search);
        const id = urlParams.get('id');
        const token = urlParams.get('token');

        debug("Paramètre ID = " + id);
        debug("Paramètre Token = " + token);

        async function verifier() {
            if (!id || !token) {
                document.getElementById('result').innerHTML = "Lien invalide";
                debug("Erreur : Lien invalide");
                return;
            }

            const blacklistSnap = await db.ref("blacklist/" + id).once("value");
            debug("Blacklist existe : " + blacklistSnap.exists());

            if (blacklistSnap.exists()) {
                document.getElementById('result').innerHTML = "Client <b>non validé</b> (blacklisté)";
                debug("Erreur : Client blacklisté");
                return;
            }

            const cleSnap = await db.ref("config/cleAES").once("value");
            debug("Clé trouvée : " + cleSnap.exists());

            if (!cleSnap.exists()) {
                document.getElementById('result').innerHTML = "Erreur de clé de sécurité.";
                debug("Erreur : Clé AES non trouvée");
                return;
            }

            const cleAES = cleSnap.val();
            debug("Clé AES : " + cleAES);

            const decrypted = CryptoJS.AES.decrypt(token, cleAES).toString(CryptoJS.enc.Utf8);
            debug("Déchiffrement résultat : " + decrypted);

            if (decrypted === id) {
                document.getElementById('result').innerHTML = "Client <b>validé</b> ✅";
                debug("Succès : Client validé");
            } else {
                document.getElementById('result').innerHTML = "Client <b>non validé</b> (mauvais token)";
                debug("Erreur : Mauvais token");
            }
        }

        verifier();
    </script>
</body>

</html>
